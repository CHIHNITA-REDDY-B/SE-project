from flask import Flask, render_template, request
from werkzeug.utils import secure_filename
from werkzeug import secure_filename, FileStorage
import os, pytesseract
from flask_uploads import UploadSet, configure_uploads, IMAGES
from PIL import Image

project_dir = os.path.dirname(os.path.abspath(file))
app = Flask(name,
            static_url_path='',
            static_folder='static',
            template_folder='template')

photos = UploadSet('photos', IMAGES)  # folder
app.config['DEBUG'] = True
app.config['UPLOAD_FOLDER'] = 'images'


# class for image to text
class GetText(object):
    def init(self, file):
        self.file = pytesseract.image_to_string(Image.open(project_dir + '/images/ ' + file))


app = Flask(name, template_folder='template')


@app.route('/', methods=['GET', 'POST'])
def home():
    if request.method == 'POST':
        if 'photo' not in request.files:
            return 'there is no photo in form'
        name = request.form['img-name'] + '.jpg'
        photo = request.files['photo']
        path = os.path.join(app.config['UPLOAD_FOLDER'], name)
        photo.save(path)
        textObject = GetText(name)
        print('TEXT OBJECT' + textObject.file)
        return textObject.file
    return render_template("conversion.html")


if name == 'main':
    app.run()
